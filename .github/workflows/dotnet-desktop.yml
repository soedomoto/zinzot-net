name: .NET Core Blazor and MAUI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write 
  packages: write

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-15, windows-latest ]
        include:
          - os: macos-15
            maui-version: maui-maccatalyst
            target: net8.0-maccatalyst
            target-args: 
            runtime-identifier: 
            artifact: ZinzotNet.dmg
            package-step: package-dmg
          - os: windows-latest
            maui-version: maui-windows
            target: net8.0-windows10.0.19041.0
            target-args: -p:TargetPlatformVersion=10.0.17763.0
            runtime-identifier: -r win-x64
            artifact: ZinzotNet-win.zip
            package-step: package-windows

    env:
      Solution_Name: ZinzotNet.sln
      Maui_Project_Directory: ZinzotNet
      Maui_Project_Path: ZinzotNet/ZinzotNet.csproj
      Test_Project_Path: None

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Xcode version
      if: matrix.os == 'macos-15'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.3'
    
    - name: Install Windows 10 SDK
      if: matrix.os == 'windows-latest'
      run: |
        choco install windows-sdk-10.0

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Install MAUI Workloads
      run: |
        dotnet workload install ${{ matrix.maui-version }} --skip-manifest-update
        dotnet workload list
      
    - name: Restore Solution
      run: |
        dotnet restore $Solution_Name
      
    - name: Build Solution
      run: |
        dotnet build ZinzotNet.Shared/ZinzotNet.Shared.csproj -f net8.0 --no-restore
        dotnet build ZinzotNet/ZinzotNet.csproj -f ${{ matrix.target }} --no-restore

    - name: Extract Project Properties for macOS
      if: matrix.os == 'macos-15'
      run: |
        brew install xmlstarlet
        ID=$(xmlstarlet sel -t -v "//ApplicationId" $Maui_Project_Path)
        echo "APP_ID=$ID" >> $GITHUB_ENV
        VERSION=$(xmlstarlet sel -t -v "//ApplicationDisplayVersion" $Maui_Project_Path)
        echo "APP_VERSION=$VERSION" >> $GITHUB_ENV

    - name: Extract Project Properties for Windows
      if: matrix.os == 'windows-latest'
      run: |
        $VERSION = (Select-Xml -Path $env:Maui_Project_Path -XPath '//ApplicationDisplayVersion').Node.InnerText
        echo "APP_VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh

    - name: Package ZinzotNet.app as .pkg for macOS
      if: matrix.os == 'macos-15'
      run: |
        pkgbuild --install-location /Applications \
          --component ZinzotNet/bin/Debug/net8.0-maccatalyst/ZinzotNet.app \
          --identifier ${{ env.APP_ID }} \
          --version ${{ env.APP_VERSION }} \
          ZinzotNet.pkg

    - name: Package ZinzotNet.app as .dmg for macOS
      run: |
        mkdir -p ./dmg_temp
        cp -R ZinzotNet/bin/Debug/net8.0-maccatalyst/ZinzotNet.app ./dmg_temp/
        hdiutil create -volname "ZinzotNet" -srcfolder ./dmg_temp -ov -format UDZO ZinzotNet.dmg
        rm -rf ./dmg_temp

    - name: Package ZinzotNet as .zip for Windows
      if: matrix.os == 'windows-latest'
      run: Compress-Archive -Path ZinzotNet\bin\x64\Debug\net8.0-windows10.0.19041.0 -DestinationPath ZinzotNet.zip
      shell: pwsh
  
    # - name: Create GitHub Release
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     tag_name: v${{ env.APP_VERSION }}
    #     name: Release v${{ env.APP_VERSION }}
    #     draft: false
    #     prerelease: false
    #     files: ZinzotNet.dmg
    #     token: ${{ secrets.GITHUB_TOKEN }}